<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.zjw.springboot.mapper.system.MenuMapper">

    <resultMap id="menuMap" type="cn.com.zjw.springboot.entity.system.Menu">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="MENU_NAME" property="menuName" jdbcType="VARCHAR"/>
        <result column="MENU_ROUTE_PATH" property="menuRoutePath" jdbcType="VARCHAR"/>
        <result column="PID" property="pid" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="permissionMenuMap" type="cn.com.zjw.springboot.dto.system.PermissionMenu">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="MENU_NAME" property="label" jdbcType="VARCHAR"/>
        <result column="PID" property="pid" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getUserMenu" resultMap="menuMap">
        SELECT
            distinct t4.id,
            t4.menu_name,
            t4.menu_route_path,
            t4.pid
        FROM
            t_permission t1
        INNER JOIN
            t_role_permission t2
        ON
            t1.id = t2.permission_id
        INNER JOIN
            t_role t3
        ON
            t2.role_id = t3.id
        INNER JOIN
            t_menu t4
        ON
            t2.menu_id = t4.id
        INNER JOIN
            t_user_permission t5
        ON
            t1.id = t5.permission_id
        WHERE
            t5.user_id = #{userId}
        AND
            t4.is_valid = #{isValid}
        ORDER BY
            id,
            pid
    </select>

    <select id="getUndistributedMenu" resultMap="permissionMenuMap">
        SELECT
            distinct t4.id,
            t4.menu_name,
            t4.pid
        FROM
            t_permission t1
        INNER JOIN
            t_role_permission t2
        ON
            t1.id = t2.permission_id
        INNER JOIN
            t_role t3
        ON
            t2.role_id = t3.id
        INNER JOIN
            t_menu t4
        ON
            t2.menu_id = t4.id
        WHERE
            t4.is_valid = #{isValid}
        <if test="type != 'save'">
            AND t4.id NOT IN (
                SELECT
                    menu_id
                FROM
                    t_role_permission
                WHERE
                    role_id = #{roleId, jdbcType=VARCHAR}
                AND
                    pid IS NOT NULL
            )
        </if>
        <if test="flag">
            AND t3.user_id = #{userId}
        </if>
        ORDER BY
            id,
            pid
    </select>

    <select id="getDistributeMenu" resultMap="permissionMenuMap">
        SELECT
            distinct t4.id,
            t4.menu_name,
            t4.pid
        FROM
            t_permission t1
        INNER JOIN
            t_role_permission t2
        ON
            t1.id = t2.permission_id
        INNER JOIN
            t_role t3
        ON
            t2.role_id = t3.id
        INNER JOIN
            t_menu t4
        ON
            t2.menu_id = t4.id
        WHERE
            role_id = #{roleId, jdbcType=VARCHAR}
        AND
            t4.is_valid = #{isValid}
        ORDER BY
            id,
            pid
    </select>

    <select id="getUndistributedRoles" resultMap="permissionMenuMap">
        SELECT
            DISTINCT t3.ID ID,
            t3.ROLE_NAME MENU_NAME,
            0 PID
        FROM
            T_PERMISSION t1
        INNER JOIN
            T_ROLE_PERMISSION t2
        ON
            t1.ID = t2.PERMISSION_ID
        INNER JOIN
            T_ROLE t3
        ON
            t2.ROLE_ID = t3.ID
        LEFT JOIN
            T_USER_PERMISSION   t4
        ON
            t1.ID = t4.PERMISSION_ID
        WHERE  t1.ID not in
        (
        SELECT
        DISTINCT t4.PERMISSION_ID
        FROM
            T_PERMISSION t1
        INNER JOIN
            T_ROLE_PERMISSION t2
        ON
            t1.id = t2.PERMISSION_ID
        INNER JOIN
            T_ROLE t3
        ON
            t2.ROLE_ID = t3.id
        LEFT JOIN
            T_USER_PERMISSION   t4
        ON
            t1.ID = t4.PERMISSION_ID
        WHERE t4.USER_ID = #{userId}
        )
        AND t3.USER_ID = #{loginUser}
    </select>
    <select id="getDistributedRoles" resultMap="permissionMenuMap">
        SELECT
            distinct t3.id ID,
            t3.role_name MENU_NAME,
            0 PID
        FROM
            t_permission t1
        INNER JOIN
            t_role_permission t2
        ON
            t1.id = t2.permission_id
        INNER JOIN
            t_role t3
        ON
            t2.role_id = t3.id
        LEFT JOIN
            t_user_permission   t4
        ON
            t1.id = t4.permission_id
        WHERE
            t3.user_id = #{loginUser}
        AND
            t4.user_id = #{userId}
    </select>
</mapper>